{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sathwik\\\\Documents\\\\NEU\\\\WebD\\\\final_proj\\\\INFO6150_Final_Project\\\\Web-Design-Group-Project-Main\\\\react-app\\\\src\\\\components\\\\Auth\\\\Auth.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Form, Button, Container, Row, Col, Alert, Spinner } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport './Auth.css';\nimport backgroundImage from '../../images/signUp_background.jpg';\nimport logoImage from '../../images/logo.png';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Auth = () => {\n  _s();\n  const [isSignUp, setIsSignUp] = useState(false);\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [apiError, setApiError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate();\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const validateForm = () => {\n    const newErrors = {};\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\n    if (!emailRegex.test(formData.email)) {\n      newErrors.email = 'Invalid email format';\n    }\n    if (!passwordRegex.test(formData.password)) {\n      newErrors.password = 'Password must include uppercase, number, and special character';\n    }\n    if (isSignUp) {\n      if (!formData.firstName) {\n        newErrors.firstName = 'First name is required';\n      }\n      if (!formData.lastName) {\n        newErrors.lastName = 'Last name is required';\n      }\n      if (!formData.securityAnswer) {\n        newErrors.securityAnswer = 'Security answer is required';\n      }\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setApiError('');\n    setIsLoading(true);\n    if (!validateForm()) {\n      setIsLoading(false);\n      return;\n    }\n    try {\n      const API_URL = 'http://localhost:5001/api';\n      const endpoint = isSignUp ? '/users/register' : '/users/login';\n      let requestData;\n      if (isSignUp) {\n        requestData = {\n          name: `${formData.firstName} ${formData.lastName}`,\n          email: formData.email,\n          password: formData.password,\n          securityQuestion: \"What was your first pet's name?\",\n          securityAnswer: formData.securityAnswer,\n          role: \"customer\"\n        };\n      } else {\n        requestData = {\n          email: formData.email,\n          password: formData.password\n        };\n      }\n      console.log('Attempting to connect to:', `${API_URL}${endpoint}`);\n      console.log('Request data:', requestData);\n      const response = await fetch(`${API_URL}${endpoint}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify(requestData)\n      });\n      console.log('Response status:', response.status);\n      let data;\n      try {\n        data = await response.json();\n        console.log('Response data:', data);\n      } catch (jsonError) {\n        console.error('Error parsing JSON response:', jsonError);\n        throw new Error('Invalid response from server');\n      }\n      if (!response.ok) {\n        throw new Error(data.message || `Server error: ${response.status}`);\n      }\n      if (!data.token || !data.user) {\n        throw new Error('Invalid response format: missing token or user data');\n      }\n\n      // Store token and user data\n      localStorage.setItem('token', data.token);\n      localStorage.setItem('user', JSON.stringify(data.user));\n      console.log('Authentication successful');\n      console.log('User role:', data.user.role);\n      console.log('Stored token:', data.token.substring(0, 10) + '...');\n\n      // Role-based redirection\n      if (data.user.role.toLowerCase() === 'admin') {\n        console.log('Redirecting to admin user management');\n        navigate('/admin/user-management');\n      } else if (data.user.role.toLowerCase() === 'artist') {\n        console.log('Redirecting to artist dashboard');\n        navigate('/artists/dashboard');\n      } else {\n        console.log('Redirecting to homepage');\n        navigate('/homepage');\n      }\n    } catch (err) {\n      console.error('Authentication error:', err);\n      if (err instanceof Error) {\n        if (err.message.includes('Failed to fetch')) {\n          setApiError('Unable to connect to the server. Please make sure the backend server is running on port 5001.');\n        } else if (err.message.includes('Invalid response format')) {\n          setApiError('Server returned an invalid response. Please try again later.');\n        } else {\n          setApiError(err.message);\n        }\n      } else {\n        setApiError('An unexpected error occurred during authentication');\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    className: \"auth-container\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 5,\n        className: \"image-section\",\n        style: {\n          '--background-image': `url(${backgroundImage})`\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo-container\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: logoImage,\n            alt: \"logo\",\n            className: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 7,\n        className: \"form-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: isSignUp ? 'Sign Up' : 'Sign In'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), apiError && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: apiError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          className: \"auth-form\",\n          children: [isSignUp && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                name: \"firstName\",\n                placeholder: \"First Name\",\n                value: formData.firstName,\n                onChange: handleInputChange,\n                isInvalid: !!errors.firstName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: errors.firstName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                name: \"lastName\",\n                placeholder: \"Last Name\",\n                value: formData.lastName,\n                onChange: handleInputChange,\n                isInvalid: !!errors.lastName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: errors.lastName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              name: \"email\",\n              placeholder: \"Email\",\n              value: formData.email,\n              onChange: handleInputChange,\n              isInvalid: !!errors.email,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              name: \"password\",\n              placeholder: \"Password\",\n              value: formData.password,\n              onChange: handleInputChange,\n              isInvalid: !!errors.password,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this), isSignUp && /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Security Question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-muted mb-2\",\n              children: \"What was your first pet's name?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"securityAnswer\",\n              placeholder: \"Enter your answer\",\n              value: formData.securityAnswer,\n              onChange: handleInputChange,\n              isInvalid: !!errors.securityAnswer,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.securityAnswer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"dark\",\n            type: \"submit\",\n            className: \"w-100 mb-3\",\n            disabled: isLoading,\n            children: isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {\n              as: \"span\",\n              animation: \"border\",\n              size: \"sm\",\n              role: \"status\",\n              \"aria-hidden\": \"true\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 17\n            }, this) : isSignUp ? 'Register' : 'Login'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-center\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"link\",\n              onClick: () => setIsSignUp(!isSignUp),\n              className: \"toggle-link\",\n              children: isSignUp ? 'Already have an account? Sign In' : \"Don't have an account? Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n};\n_s(Auth, \"+CWwsMXj3u7aqCnl0OO1GTcF/SI=\", false, function () {\n  return [useNavigate];\n});\n_c = Auth;\nexport default Auth;\nvar _c;\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["React","useState","Form","Button","Container","Row","Col","Alert","Spinner","useNavigate","backgroundImage","logoImage","jsxDEV","_jsxDEV","Fragment","_Fragment","Auth","_s","isSignUp","setIsSignUp","formData","setFormData","email","password","errors","setErrors","apiError","setApiError","isLoading","setIsLoading","navigate","handleInputChange","e","name","value","target","prev","validateForm","newErrors","emailRegex","passwordRegex","test","firstName","lastName","securityAnswer","Object","keys","length","handleSubmit","preventDefault","API_URL","endpoint","requestData","securityQuestion","role","console","log","response","fetch","method","headers","body","JSON","stringify","status","data","json","jsonError","error","Error","ok","message","token","user","localStorage","setItem","substring","toLowerCase","err","includes","fluid","className","children","md","style","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","variant","onSubmit","Group","Control","type","placeholder","onChange","isInvalid","Feedback","required","Label","disabled","as","animation","size","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Sathwik/Documents/NEU/WebD/final_proj/INFO6150_Final_Project/Web-Design-Group-Project-Main/react-app/src/components/Auth/Auth.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Form, Button, Container, Row, Col, Alert, Spinner } from 'react-bootstrap';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './Auth.css';\r\nimport backgroundImage from '../../images/signUp_background.jpg';\r\nimport logoImage from '../../images/logo.png';\r\n\r\ninterface UserData {\r\n  firstName?: string;\r\n  lastName?: string;\r\n  email: string;\r\n  password: string;\r\n  securityQuestion?: string;\r\n  securityAnswer?: string;\r\n  role?: string;\r\n}\r\n\r\nconst Auth: React.FC = () => {\r\n  const [isSignUp, setIsSignUp] = useState(false);\r\n  const [formData, setFormData] = useState<UserData>({\r\n    email: '',\r\n    password: '',\r\n  });\r\n  const [errors, setErrors] = useState<{ [key: string]: string }>({});\r\n  const [apiError, setApiError] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const newErrors: { [key: string]: string } = {};\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\r\n\r\n    if (!emailRegex.test(formData.email)) {\r\n      newErrors.email = 'Invalid email format';\r\n    }\r\n\r\n    if (!passwordRegex.test(formData.password)) {\r\n      newErrors.password = 'Password must include uppercase, number, and special character';\r\n    }\r\n\r\n    if (isSignUp) {\r\n      if (!formData.firstName) {\r\n        newErrors.firstName = 'First name is required';\r\n      }\r\n      if (!formData.lastName) {\r\n        newErrors.lastName = 'Last name is required';\r\n      }\r\n      if (!formData.securityAnswer) {\r\n        newErrors.securityAnswer = 'Security answer is required';\r\n      }\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setApiError('');\r\n    setIsLoading(true);\r\n\r\n    if (!validateForm()) {\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const API_URL = 'http://localhost:5001/api';\r\n      const endpoint = isSignUp ? '/users/register' : '/users/login';\r\n      \r\n      let requestData;\r\n      if (isSignUp) {\r\n        requestData = {\r\n          name: `${formData.firstName} ${formData.lastName}`,\r\n          email: formData.email,\r\n          password: formData.password,\r\n          securityQuestion: \"What was your first pet's name?\",\r\n          securityAnswer: formData.securityAnswer,\r\n          role: \"customer\"\r\n        };\r\n      } else {\r\n        requestData = {\r\n          email: formData.email,\r\n          password: formData.password\r\n        };\r\n      }\r\n\r\n      console.log('Attempting to connect to:', `${API_URL}${endpoint}`);\r\n      console.log('Request data:', requestData);\r\n\r\n      const response = await fetch(`${API_URL}${endpoint}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Accept': 'application/json'\r\n        },\r\n        body: JSON.stringify(requestData),\r\n      });\r\n\r\n      console.log('Response status:', response.status);\r\n      \r\n      let data;\r\n      try {\r\n        data = await response.json();\r\n        console.log('Response data:', data);\r\n      } catch (jsonError) {\r\n        console.error('Error parsing JSON response:', jsonError);\r\n        throw new Error('Invalid response from server');\r\n      }\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.message || `Server error: ${response.status}`);\r\n      }\r\n\r\n      if (!data.token || !data.user) {\r\n        throw new Error('Invalid response format: missing token or user data');\r\n      }\r\n\r\n      // Store token and user data\r\n      localStorage.setItem('token', data.token);\r\n      localStorage.setItem('user', JSON.stringify(data.user));\r\n\r\n      console.log('Authentication successful');\r\n      console.log('User role:', data.user.role);\r\n      console.log('Stored token:', data.token.substring(0, 10) + '...');\r\n\r\n      // Role-based redirection\r\n      if (data.user.role.toLowerCase() === 'admin') {\r\n        console.log('Redirecting to admin user management');\r\n        navigate('/admin/user-management');\r\n      } else if (data.user.role.toLowerCase() === 'artist') {\r\n        console.log('Redirecting to artist dashboard');\r\n        navigate('/artists/dashboard');\r\n      } else {\r\n        console.log('Redirecting to homepage');\r\n        navigate('/homepage');\r\n      }\r\n    } catch (err) {\r\n      console.error('Authentication error:', err);\r\n      if (err instanceof Error) {\r\n        if (err.message.includes('Failed to fetch')) {\r\n          setApiError('Unable to connect to the server. Please make sure the backend server is running on port 5001.');\r\n        } else if (err.message.includes('Invalid response format')) {\r\n          setApiError('Server returned an invalid response. Please try again later.');\r\n        } else {\r\n          setApiError(err.message);\r\n        }\r\n      } else {\r\n        setApiError('An unexpected error occurred during authentication');\r\n      }\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container fluid className=\"auth-container\">\r\n      <Row>\r\n        <Col md={5} className=\"image-section\" style={{ '--background-image': `url(${backgroundImage})` } as React.CSSProperties}>\r\n          <div className=\"logo-container\">\r\n            <img src={logoImage} alt=\"logo\" className=\"logo\" />\r\n          </div>\r\n        </Col>\r\n        <Col md={7} className=\"form-section\">\r\n          <h2>{isSignUp ? 'Sign Up' : 'Sign In'}</h2>\r\n          {apiError && <Alert variant=\"danger\">{apiError}</Alert>}\r\n          <Form onSubmit={handleSubmit} className=\"auth-form\">\r\n            {isSignUp && (\r\n              <>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"firstName\"\r\n                    placeholder=\"First Name\"\r\n                    value={formData.firstName}\r\n                    onChange={handleInputChange}\r\n                    isInvalid={!!errors.firstName}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.firstName}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"lastName\"\r\n                    placeholder=\"Last Name\"\r\n                    value={formData.lastName}\r\n                    onChange={handleInputChange}\r\n                    isInvalid={!!errors.lastName}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.lastName}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n              </>\r\n            )}\r\n\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Control\r\n                type=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"Email\"\r\n                value={formData.email}\r\n                onChange={handleInputChange}\r\n                isInvalid={!!errors.email}\r\n                required\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.email}\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Control\r\n                type=\"password\"\r\n                name=\"password\"\r\n                placeholder=\"Password\"\r\n                value={formData.password}\r\n                onChange={handleInputChange}\r\n                isInvalid={!!errors.password}\r\n                required\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.password}\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n\r\n            {isSignUp && (\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>Security Question</Form.Label>\r\n                <p className=\"text-muted mb-2\">What was your first pet's name?</p>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"securityAnswer\"\r\n                  placeholder=\"Enter your answer\"\r\n                  value={formData.securityAnswer}\r\n                  onChange={handleInputChange}\r\n                  isInvalid={!!errors.securityAnswer}\r\n                  required\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.securityAnswer}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n            )}\r\n\r\n            <Button \r\n              variant=\"dark\" \r\n              type=\"submit\" \r\n              className=\"w-100 mb-3\"\r\n              disabled={isLoading}\r\n            >\r\n              {isLoading ? (\r\n                <Spinner\r\n                  as=\"span\"\r\n                  animation=\"border\"\r\n                  size=\"sm\"\r\n                  role=\"status\"\r\n                  aria-hidden=\"true\"\r\n                />\r\n              ) : (\r\n                isSignUp ? 'Register' : 'Login'\r\n              )}\r\n            </Button>\r\n\r\n            <p className=\"text-center\">\r\n              <Button\r\n                variant=\"link\"\r\n                onClick={() => setIsSignUp(!isSignUp)}\r\n                className=\"toggle-link\"\r\n              >\r\n                {isSignUp\r\n                  ? 'Already have an account? Sign In'\r\n                  : \"Don't have an account? Sign Up\"}\r\n              </Button>\r\n            </p>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Auth; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}